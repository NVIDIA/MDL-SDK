/******************************************************************************
 * Copyright (c) 2008-2025, NVIDIA CORPORATION. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *  * Neither the name of NVIDIA CORPORATION nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *****************************************************************************/

/*! \page mi_neuray_example_topics Index of Topics Explained in the Example Programs

The \ref mi_neuray_examples explain many topics listed here as an
index.

\section mi_neuray_example_topics_general General

  - \ref mi_neuray_example_derivatives "Automatic derivatives"
  - \ref mi_neuray_example_axf_to_mdl "AxF to MDL material format conversion"
  - \ref mi_neuray_example_distilling "Baking material sub-expressions"
  - \ref mi_neuray_example_distilling_unity "Baking material to Unity texture channel layout"
  - \ref mi_neuray_example_mdl_browser "Caching of information on packages, modules, and materials"
  - \ref mi_neuray_example_instantiation "Changing arguments"
  - \ref mi_neuray_example_df_native "Changing compiled material arguments at runtime (CPU)"
  - \ref mi_neuray_example_df_cuda "Changing compiled material arguments at runtime (PTX)"
  - \ref mi_neuray_example_compilation "Compiled materials"
  - \ref mi_neuray_example_distilling_unity "Compiling into one link unit"
  - \ref mi_neuray_example_modules "Configuration of \neurayProductName"
  - \ref mi_neuray_example_execution_glsl_vk "Configuration of the GLSL backend for Vulkan"
  - \ref mi_neuray_example_execution_glsl "Constant data (GLSL)"
  - \ref mi_neuray_example_create_module "Creation and usage of user-defined enum and struct types"
  - \ref mi_neuray_example_create_module "Creation of a material variant"
  - \ref mi_neuray_example_create_module "Creation of a simple diffuse material"
  - \ref mi_neuray_example_calls "Creating a textured material"
  - \ref mi_neuray_example_instantiation "Creating material and function variants"
  - \ref mi_neuray_example_distilling_target "Custom Distiller plugin implementation"
  - \ref mi_neuray_example_distilling_target "Custom Distiller target loading"
  - \ref mi_neuray_example_compilation "Different compilation modes"
  - \ref mi_neuray_example_code_gen "Different compilation modes and options between"
  - \ref mi_neuray_example_discovery "Discovery of MDL archives, packages and modules"
  - \ref mi_neuray_example_modules "Enumerating the contents of MDL modules"
  - \ref mi_neuray_example_dxr "Example for a Microsoft DXR-based MDL-enabled path tracer"
  - \ref mi_neuray_example_mdle "Example for Integrating the MDL encapsulated format"
  - \ref mi_neuray_example_execution_native "Execution of generated code (CPU)"
  - \ref mi_neuray_example_execution_glsl "Execution of generated code (GLSL)"
  - \ref mi_neuray_example_optix7 "Execution of generated code (OptiX 7)"
  - \ref mi_neuray_example_execution_ptx "Execution of generated code (PTX)"
  - \ref mi_neuray_example_mdle "Export and load materials or functions using the MDL encapsulated format"
  - \ref mi_neuray_example_df_native "Generated BSDF functions (CPU)"
  - \ref mi_neuray_example_df_vulkan "Generated BSDF functions (GLSL)"
  - \ref mi_neuray_example_df_cuda "Generated BSDF functions (PTX)"
  - \ref mi_neuray_example_traversal "Generating MDL code"
  - \ref mi_neuray_example_mdl_browser "Illustration of how we believe MDL materials should be presented to the user"
  - \ref mi_neuray_example_modules "Inspecting the parameters of material and function definitions"
  - \ref mi_neuray_example_instantiation "Instantiating material and function definitions"
  - \ref mi_neuray_example_start_shutdown "Interfaces and handles"
  - \ref mi_neuray_example_optix7 "Limiting the number of exported PTX functions"
  - \ref mi_neuray_example_optix7 "Linking and optimizing generated MDL code with renderer code"
  - \ref mi_neuray_example_modules "Loading of MDL modules"
  - \ref mi_neuray_example_execution_glsl "Loading textures (GLSL)"
  - \ref mi_neuray_example_execution_ptx "Loading textures (PTX)"
  - \ref mi_neuray_example_distilling_glsl "Mapping distilled materials to a GLSL shader"
  - \ref mi_neuray_example_distilling "Material distilling"
  - \ref mi_neuray_example_execution_native "MDL material state (CPU)"
  - \ref mi_neuray_example_execution_glsl "MDL material state (GLSL)"
  - \ref mi_neuray_example_execution_ptx "MDL material state (PTX)"
  - \ref mi_neuray_example_start_shutdown "Naming conventions"
  - \ref mi_neuray_example_start_shutdown "Main API access point"
  - \ref mi_neuray_example_start_shutdown "Main include files"
  - \ref mi_neuray_example_calls "Rationale for expressions vs values"
  - \ref mi_neuray_example_dxr "Rendering glTF scenes using MDL materials"
  - \ref mi_neuray_example_start_shutdown "Starting and shutting down"
  - \ref mi_neuray_example_compilation "Target code generation"
  - \ref mi_neuray_example_code_gen "Target code generation for a material with multiple functions"
  - \ref mi_neuray_example_code_gen "Target code serialization"
  - \ref mi_neuray_example_execution_glsl "Texture access functions (GLSL)"
  - \ref mi_neuray_example_execution_ptx "Texture access functions (PTX)"
  - \ref mi_neuray_example_dependency_inspector "Type of dependencies of an MDL module"
  - \ref mi_neuray_example_traversal "Traversal of a compiled material"
  - \ref mi_neuray_example_create_module "Using the uniform analysis"


  
*/
