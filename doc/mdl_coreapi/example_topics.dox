/******************************************************************************
 * Copyright (c) 2018-2025, NVIDIA CORPORATION. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *  * Neither the name of NVIDIA CORPORATION nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *****************************************************************************/

/*! \page mi_mdl_core_example_topics Index of Topics Explained in the Example Programs

The \ref mi_mdl_core_examples explain topics that are listed here as an index.

\section mi_mdl_core_example_topics_helpers Helper classes

  - \ref mi_mdl_core_example_shared "The Material_compiler helper class"
  - \ref mi_mdl_core_example_shared "Thread contexts"
  - \ref mi_mdl_core_example_shared "Search paths"
  - \ref mi_mdl_core_example_shared "Module management"

  - \ref mi_mdl_core_example_cuda_shared "The Material_backend_compiler helper class"
  - \ref mi_mdl_core_example_cuda_shared "Configuration of the JIT backend"
  - \ref mi_mdl_core_example_cuda_shared "Resource management"
  - \ref mi_mdl_core_example_cuda_shared "Adding material subexpressions to the link unit"
  - \ref mi_mdl_core_example_cuda_shared "Adding distribution functions to the link unit"
  - \ref mi_mdl_core_example_cuda_shared "Generating the CUDA PTX code"
  
  - \ref mi_mdl_core_example_distilling_shared "The Distiller_helper helper class"
  

\section mi_mdl_core_example_topics_general General

  - \ref mi_mdl_core_example_calls "Main include file"
  - \ref mi_mdl_core_example_calls "Main API access point"
  - \ref mi_mdl_core_example_calls "Configuration of the Material_compiler helper class"
  - \ref mi_mdl_core_example_calls "Rationale for DAG nodes vs values"
  - \ref mi_mdl_core_example_calls "Creating a textured material"
  
  - \ref mi_mdl_core_example_code_gen "Different compilation modes and options"
  - \ref mi_mdl_core_example_code_gen "Target code generation for a material with multiple functions"
  - \ref mi_mdl_core_example_code_gen "Material distilling"
  
  - \ref mi_mdl_core_example_df_native "Generating target code for BSDF functions (CPU)"
  - \ref mi_mdl_core_example_df_native "Using generated BSDF functions (CPU)"

  - \ref mi_mdl_core_example_df_vulkan "Generating target code for BSDF functions (GLSL)"
  - \ref mi_mdl_core_example_df_vulkan "Using generated BSDF functions (GLSL)"

  - \ref mi_mdl_core_example_execution_ptx "MDL material state (PTX)"
  - \ref mi_mdl_core_example_execution_ptx "Execution of generated code (PTX)"
  - \ref mi_mdl_core_example_execution_ptx "Loading textures (PTX)"
  - \ref mi_mdl_core_example_execution_ptx "Texture access functions (PTX)"

  - \ref mi_mdl_core_example_df_cuda "Generated BSDF functions"
  - \ref mi_mdl_core_example_df_cuda "Changing compiled material arguments at runtime"

  - \ref mi_mdl_core_example_derivatives "Automatic derivatives"

*/
