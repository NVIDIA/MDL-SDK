Base version: LLVM 12.0.1 (2021-07-09)

Changes:
 - remove "test" folder
 - remove all targets except NVPTX, X86 and AArch64:
   - remove corresponding subfolders in lib/Target
   - remove entries CMake variables LLVM_ALL_TARGETS and LLVM_TARGETS_WITH_JIT in CMakeLists.txt
 - fix missing padding for global vector constants in bufferLEByte in lib/Target/NVPTX/NVPTXAsmPrinter.cpp
 - removed global counter for call sequences, put it into the NVPTXTargetLowering instance,
   so compiling the same input leads to the same PTX output
 - disabled selection of special library functions for Mac in TargetLoweringBase::InitLibcalls()
   in lib/CodeGen/TargetLoweringBase.cpp
 - add an "AvoidPointerPHIs" option to SimplifyCFGPass to allow avoid introducing PHIs of pointer types
   for HLSL. Option also made available via PassManagerBuilder.
 - add an "EnableVectorizer" option to PassManagerBuilder to completely disable the Vectorizer. It creates
   hard to support code for GLSL (vector operations on double and int1 aka bool).
   for HLSL. Option also made available via PassManagerBuilder.
 - fix pointer arithmetic on parameters by adding a MoveParam node in NVPTXISelLowering.cpp and
   skipping it for ld.param in NVPTXISelDAGToDAG.cpp.
   fixes translation of "%2 = extractelement <2 x i32> %param_a, i32 %1"
 - added sm_86 and ptx71
 - applied llvm-project commit 8644eb02 "[NFC][Transforms][Coroutines] Remove unused variable"
 - disable implicit cast from llvm::StringRef to std::string_view for Clang to fix
   compile errors on MacOSX with clang900
 - fix compile error on MacOSX with clang900 in GenericDomTree.h by replacing a constexpr by const
 - llvm::dbgs() writes to stderr and additionally to DebugOutputStr() on windows for easier debugging
 - guard OpenMP code with #ifdef LLVM_ENABLE_OPENMP (currently impossible to enable)
 - guard ObjectC specific transformations and analysis with #ifdef LLVM_ENABLE_OBJC (currently impossible to enable)
 - made llvm::createNVVMReflectPass() external visible
 - disabled funnel shift creation inside (aggressive) instruction combiner pass
 - fix compile error for VS2017 in ModuleSummaryIndex.h regarding TypeIdCompatibleVtableMap
 - fix compile error for GCC12 in PointerSumType.h (missing template keyword)
 - applied llvm-project commit d58c7a92 "[IR] Added operator delete to subclasses of User to avoid UB"
 - applied llvm-project commit 1d9086bf "Fix use of uninitialized member in constructor"
 - fix race-condition in LLVM Orc JIT notifying other threads of an emitted object before the memory manager
   for the object is properly registered
 - removed lib/ExecutionEngine/Orc/SpeculateAnalyses.cpp, this file is not used anywhere but adds a dependency
   to the PassBuilder class (we want to avoid)
 - adapt NVPTX data layout to use same alignment for vectors with 3 elements as CUDA on the ABI
   in lib/Target/NVPTX/NVPTXTargetMachine.cpp
 - don't call abort in global destructors in ~raw_fd_ostream when writing to stderr failed
 - applied llvm_project commit c2515a8f "[Bitcode] Add some missing GetTypeByID failure checks"
   (CVE-2023-46049)
 - remove extra template qualifier on constructors in include/llvm/ADT/STLExtras.h
   (result_pair and enumerator_iter)
 - fix use of already moved MemoryManager in LLVM Orc JIT when calling notifyObjectLoaded
   (bug introduced by our race-condition fix)
 - applied llvm-project commit 6a684dbc "[Support] Remove llvm::is_trivially_{copy/move}_constructible"
 - fix a bunch of MSVC warnings
 - disable MSVC warning C4624 (deleted destructor) for Operator.h
 - disable support for DWARF call site-related attributes for NVPTX because calls are split into multiple
   machine instructions which is not supported
 - disable InstCombiner optimizations producing new SRem instructions to avoid undefined behaviour for GLSL
   in InstCombinerImpl::visitMul() and InstCombinerImpl::visitAdd()
