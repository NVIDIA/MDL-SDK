/******************************************************************************
 * Copyright (c) 2023-2025, NVIDIA CORPORATION. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *  * Neither the name of NVIDIA CORPORATION nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *****************************************************************************/

rules Wrong_comparisons bottomup {
    import state;
    import math;

    matched_bsdf ~ microfacet_ggx_vcavities_bsdf( ru,rv,tint,ior,t,mode)
        --> matched_bsdf [[ type = "glass",
                                  c_c = color(0.0), c_ru = 0.0, c_rv = 0.0, c_t = state::texture_tangent_u(0), c_w0 = 0.0, c_w90 = 0.0,c_n = state::normal(),
                                  g_c0 = tint, g_c90 = tint, g_ru = ru, g_rv = rv, g_t = t, g_w0 = 0.04 /*ior from material?*/, g_w90 = 1.0, g_n = state::normal(),
                                  gt_c = tint, gt_w = 1.0, gt_ior = ior,
                                  d_c = color(0.0), d_w = 0.0, dt_c = color(0.0), dt_w = 0.0, b_n = state::normal(),
                                  r_c = color(0.0), r_r = 0.0, r_w = 0.0]]
    if (mode == scatter_reflect_transmit) && (ior >= color(1.0));
}
