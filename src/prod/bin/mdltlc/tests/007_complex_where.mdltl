/******************************************************************************
 * Copyright (c) 2021-2025, NVIDIA CORPORATION. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *  * Neither the name of NVIDIA CORPORATION nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *****************************************************************************/

rules Complex_where topdown {
    material(tw,material_surface(bsdf_mix_2(
        w2,custom_curve_layer(f0,f90,e,w,layer,diffuse_reflection_bsdf(tint2,r2),n),
        w1,microfacet_ggx_vcavities_bsdf(ru1,rv1,tint1,_,t1)
        ),em),
            bf,ior,vol,material_geometry(d,cutout,ng)) -->
        material(tw,material_surface(bsdf_mix_2(
            w2b,custom_curve_layer(f0,f90,e,w,layer,diffuse_reflection_bsdf( c4,r2),n),
            w1b,microfacet_ggx_vcavities_bsdf(ru1,rv1,c4,color(0.0),t1)
            ),em),
                bf,ior,vol,material_geometry(d,cutout,ng))
        skip_recursion
        maybe tint1 != tint2 && w == 0.0
        where
        c4 = tint1*w1+tint2*w2
        w2b = 1.0-w1b //use the fact that w1+w2 must be 1.0 here
        w1b = math::saturate(w1a/(w1a+w2a)) //safe because one weight is always >0
        w2a = w2*math::max_value(tint2)
        w1a = w1*math::max_value(tint1)
    ;
}
